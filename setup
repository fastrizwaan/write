#!/bin/bash

INSTALL_PATH="/usr/local"
FORCE_INSTALL=false

# List of required Python modules
REQUIRED_PYTHON_MODULES=(
    "gi"  # PyGObject for GTK, WebKit, etc.
)

show_help() {
    echo "Usage: ./setup [OPTION]..."
    echo "Install or uninstall Writer HTML Editor."
    echo ""
    echo "Options:"
    echo "  -i, --install         Install Writer"
    echo "  -u, --uninstall       Uninstall Writer"
    echo "  -p, --prefix=PATH     Specify installation prefix (default: /usr/local)"
    echo "  -f, --force           Force installation even if dependencies are not met"
    echo "  -h, --help            Display this help and exit"
}

check_dependencies() {
    local missing_programs=()

    # Required system programs for Writer
    local required_programs=(
        "python3"  # Python 3 runtime
    )

    for prog in "${required_programs[@]}"; do
        if ! command -v "$prog" &> /dev/null; then
            missing_programs+=("$prog")
        fi
    done

    if [ ${#missing_programs[@]} -ne 0 ]; then
        echo "The following required programs are missing:"
        for prog in "${missing_programs[@]}"; do
            echo "  - $prog"
        done
        echo ""
        echo "Please install them before proceeding or use the -f or --force option to install Writer anyway."
        echo ""
        echo "On Fedora:"
        echo "  sudo dnf install python3 python3-gobject gtk4 webkitgtk6"
        return 1
    fi

    return 0
}

check_python_dependencies() {
    local missing_modules=()

    for module in "${REQUIRED_PYTHON_MODULES[@]}"; do
        python3 -c "import $module" &> /dev/null
        if [ $? -ne 0 ]; then
            missing_modules+=("$module")
        fi
    done

    if [ ${#missing_modules[@]} -ne 0 ]; then
        echo "The following required Python modules are missing:"
        for module in "${missing_modules[@]}"; do
            echo "  - $module"
        done
        echo ""
        echo "You can install them using pip:"
        echo "  pip3 install ${missing_modules[*]}"
        echo "Or on Fedora:"
        echo "  sudo dnf install python3-gobject"
        return 1
    fi

    return 0
}

install_files() {
    echo "Installing Writer to $INSTALL_PATH..."

    # Install main script from src/
    install -Dm755 src/writer.py "$INSTALL_PATH/bin/writer"

    # Install app icon from data/icons/
    install -Dm644 data/icons/io.github.fastrizwaan.writer.svg "$INSTALL_PATH/share/icons/hicolor/scalable/apps/io.github.fastrizwaan.writer.svg"

    # Install .desktop file from data/shortcut/
    install -Dm644 data/shortcut/io.github.fastrizwaan.writer.desktop "$INSTALL_PATH/share/applications/io.github.fastrizwaan.writer.desktop"

    # Install MIME type definition from data/mimetype/
    install -Dm644 data/mimetype/writer-document.xml "$INSTALL_PATH/share/mime/packages/writer-document.xml"

    # Update system databases
    echo "Updating MIME, icon, and desktop caches..."
    update-mime-database "$INSTALL_PATH/share/mime" &> /dev/null || echo "Failed to update MIME database."
    gtk-update-icon-cache "$INSTALL_PATH/share/icons/hicolor/" &> /dev/null || echo "Failed to update icon cache."
    update-desktop-database "$INSTALL_PATH/share/applications/" &> /dev/null || echo "Failed to update desktop database."

    echo "Writer installed successfully."
}

uninstall_files() {
    echo "Uninstalling Writer from $INSTALL_PATH..."

    # Remove installed files
    rm -f "$INSTALL_PATH/bin/writer"
    rm -f "$INSTALL_PATH/share/icons/hicolor/scalable/apps/io.github.fastrizwaan.writer.svg"
    rm -f "$INSTALL_PATH/share/applications/io.github.fastrizwaan.writer.desktop"
    rm -f "$INSTALL_PATH/share/mime/packages/writer-document.xml"

    # Update system databases
    echo "Updating MIME, icon, and desktop caches after uninstall..."
    update-mime-database "$INSTALL_PATH/share/mime" &> /dev/null || echo "Failed to update MIME database."
    gtk-update-icon-cache "$INSTALL_PATH/share/icons/hicolor/" &> /dev/null || echo "Failed to update icon cache."
    update-desktop-database "$INSTALL_PATH/share/applications/" &> /dev/null || echo "Failed to update desktop database."

    echo "Writer uninstalled successfully."
}

# Parse command-line arguments
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -i|--install)
            ACTION="install"
            shift
            ;;
        -u|--uninstall)
            ACTION="uninstall"
            shift
            ;;
        -p|--prefix=*)
            INSTALL_PATH="${key#*=}"
            shift
            ;;
        -f|--force)
            FORCE_INSTALL=true
            shift
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            echo "Unknown option: $key"
            show_help
            exit 1
            ;;
    esac
done

if [ -z "$ACTION" ]; then
    show_help
    exit 0
fi

if [ "$ACTION" == "install" ]; then
    if ! check_dependencies && [ "$FORCE_INSTALL" = false ]; then
        echo "Dependencies are not satisfied. Use -f or --force to force the installation."
        exit 1
    fi

    if ! check_python_dependencies && [ "$FORCE_INSTALL" = false ]; then
        echo "Python dependencies are not satisfied. Use -f or --force to force the installation."
        exit 1
    fi

    install_files
elif [ "$ACTION" == "uninstall" ]; then
    uninstall_files
fi
